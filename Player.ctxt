#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Player\ here.\r\n\ \r\n\ @author\ Daniel\ Schisch\r\n\ @version\ 0.3\r\n
comment1.params=c\ size
comment1.target=Player(greenfoot.Color,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Player.\r\n\ It\ draws\ a\ Player\ according\ to\ the\ cell-size\ and\ a\ given\ color.\r\n
comment10.params=
comment10.target=boolean\ canMoveBackward()
comment100.params=
comment100.target=boolean\ compareSpheres()
comment101.params=
comment101.target=int\ getRealX()
comment102.params=
comment102.target=int\ getRealY()
comment103.params=
comment103.target=void\ routine()
comment104.params=
comment104.target=java.lang.String\ startHTML()
comment105.params=first\ second\ loc
comment105.target=java.lang.String\ endHTML(java.lang.String,\ java.lang.String,\ int)
comment106.params=
comment106.target=void\ updateIndex()
comment107.params=
comment107.target=boolean[]\ loadState()
comment108.params=commands\ newCommands\ position\ newCommandTitles\ universalUsed
comment108.target=boolean[]\ searchForUsed(java.util.ArrayList,\ java.util.ArrayList,\ int,\ java.util.ArrayList,\ boolean[])
comment109.params=newCommands\ commands
comment109.target=java.lang.String\ createOutputCode(java.util.ArrayList,\ java.util.ArrayList)
comment11.params=
comment11.target=boolean\ canMoveSidewaysLeft()
comment110.params=chapter\ level\ loc
comment110.target=void\ updateLoC(int,\ int,\ int)
comment111.params=
comment111.target=void\ outputCode()
comment112.params=
comment112.target=void\ rewrite()
comment113.params=
comment113.target=boolean\ isWindowsSystem()
comment114.params=
comment114.target=boolean\ isLinuxSystem()
comment115.params=command
comment115.target=void\ printWindowsCommand(java.lang.String)
comment116.params=command
comment116.target=void\ printMacCommand(java.lang.String)
comment117.params=command
comment117.target=void\ printLinuxCommand(java.lang.String)
comment118.params=
comment118.target=void\ openHTML()
comment119.params=
comment119.target=void\ act()
comment119.text=\r\n\ Act\ -\ do\ whatever\ the\ Player\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment12.params=
comment12.target=boolean\ canMoveSidewaysRight()
comment120.params=
comment120.target=void\ run()
comment121.params=
comment121.target=boolean\ checkForInfiniteLoops()
comment122.params=
comment122.target=void\ schritt()
comment123.params=
comment123.target=void\ linksDrehen()
comment124.params=
comment124.target=void\ rechtsDrehen()
comment125.params=
comment125.target=void\ aufheben()
comment126.params=
comment126.target=void\ schie\u00DFen()
comment127.params=
comment127.target=void\ f\u00E4rben()
comment128.params=
comment128.target=void\ nehmen()
comment129.params=
comment129.target=void\ hinlegen()
comment13.params=
comment13.target=void\ addColorToStage()
comment130.params=
comment130.target=void\ merkeWert()
comment131.params=
comment131.target=void\ blase()
comment132.params=
comment132.target=boolean\ hatTinte()
comment133.params=
comment133.target=boolean\ istVorWand()
comment134.params=
comment134.target=boolean\ istVorKugel()
comment135.params=
comment135.target=boolean\ istVorPlattform()
comment136.params=
comment136.target=boolean\ istVorFarbe()
comment137.params=
comment137.target=boolean\ hatKugel()
comment138.params=
comment138.target=boolean\ siehtNachNorden()
comment139.params=
comment139.target=boolean\ siehtNachS\u00FCden()
comment14.params=
comment14.target=void\ addPlayerToStage()
comment140.params=
comment140.target=boolean\ siehtNachWesten()
comment141.params=
comment141.target=boolean\ siehtNachOsten()
comment142.params=
comment142.target=boolean\ istZielscheibeInReichweite()
comment143.params=
comment143.target=boolean\ istAufTinte()
comment144.params=
comment144.target=boolean\ istAufToken()
comment145.params=
comment145.target=boolean\ istAufMarkierung()
comment146.params=
comment146.target=boolean\ siehtCheckpoint()
comment147.params=
comment147.target=boolean\ istWert()
comment148.params=
comment148.target=boolean\ istWertKleiner()
comment149.params=
comment149.target=boolean\ istWertGroesser()
comment15.params=
comment15.target=void\ changeControl()
comment150.params=
comment150.target=boolean\ immer()
comment16.params=size
comment16.target=void\ drawPlayer(int)
comment16.text=\r\n\ The\ method\ for\ drawing\ a\ Player\ with\ a\ given\ size.\r\n\ The\ shape\ is\ made\ of\ outer\ and\ inner\ circles\ and\ a\ triangle.\r\n\ Input\:\ int\r\n
comment17.params=
comment17.target=void\ moveForward()
comment17.text=\r\n\ Moves\ the\ player\ one\ field\ forward.\r\n\ Works\ also\ while\ diving,\ but\ only\ if\ the\ next\ cell\ is\ in\ the\ same\ Color.\r\n
comment18.params=
comment18.target=boolean\ hasError()
comment19.params=
comment19.target=java.lang.String\ getError()
comment2.params=
comment2.target=Player()
comment2.text=\r\n\ Standard-Constructor\ for\ objects\ of\ class\ Player.\r\n\ It\ draws\ a\ Player\ with\ a\ cell-size\ of\ 50\ and\ a\ random\ color.\r\n
comment20.params=e
comment20.target=void\ setError(java.lang.String)
comment21.params=
comment21.target=void\ animateMoveForward()
comment22.params=
comment22.target=void\ moveSidewaysLeft()
comment23.params=
comment23.target=void\ animateMoveSidewaysLeft()
comment24.params=
comment24.target=void\ moveSidewaysRight()
comment25.params=
comment25.target=void\ animateMoveSidewaysRight()
comment26.params=
comment26.target=void\ moveBackward()
comment26.text=\r\n\ Move\ the\ player\ one\ field\ backward.\r\n\ Works\ also\ while\ diving,\ but\ only\ if\ the\ next\ cell\ is\ in\ the\ same\ Color.\r\n
comment27.params=
comment27.target=void\ animateMoveBackward()
comment28.params=
comment28.target=void\ turnRight()
comment28.text=\r\n\ Turns\ the\ player\ 90\ degrees\ to\ the\ right.\r\n
comment29.params=
comment29.target=boolean\ isAnimating()
comment3.params=kahla
comment3.target=Player(boolean)
comment30.params=
comment30.target=void\ bubbleUp()
comment31.params=
comment31.target=void\ animateBubble()
comment32.params=time
comment32.target=void\ createBubble(int)
comment33.params=
comment33.target=void\ animateRightTurn()
comment34.params=
comment34.target=void\ turnLeft()
comment34.text=\r\n\ Turns\ the\ player\ 90\ degrees\ to\ the\ left.\r\n
comment35.params=
comment35.target=void\ animateLeftTurn()
comment36.params=s
comment36.target=void\ changeWeapon(java.lang.String)
comment36.text=\r\n\ Will\ change\ the\ weapon\ based\ on\ a\ given\ String.\r\n\ Input\:\ String\r\n
comment37.params=
comment37.target=void\ shuffleWeapon()
comment38.params=
comment38.target=void\ shoot()
comment38.text=\r\n\ Will\ shoot\ with\ the\ equipped\ weapon.\r\n\ Also\ it\ will\ check,\ whether\ there's\ enough\ ink.\r\n
comment39.params=
comment39.target=void\ animateShootPistol()
comment4.params=
comment4.target=void\ redraw()
comment40.params=
comment40.target=boolean\ hasAmmo()
comment41.params=
comment41.target=void\ animateShootBrush()
comment42.params=
comment42.target=void\ animateShootRifle()
comment43.params=
comment43.target=void\ animateShootGrounder()
comment44.params=
comment44.target=void\ animateShootShotgun()
comment45.params=
comment45.target=greenfoot.GreenfootImage\ drawShot()
comment46.params=
comment46.target=void\ usePistol()
comment46.text=\r\n\ Simulates\ the\ shooting\ range\ with\ a\ color\ pistol.\r\n
comment47.params=
comment47.target=void\ useBrush()
comment47.text=\r\n\ Simulates\ the\ hit\ range\ with\ a\ color\ brush.\r\n
comment48.params=
comment48.target=void\ useShotgun()
comment48.text=\r\n\ Simulates\ the\ shooting\ range\ with\ a\ color\ shotgun.\r\n
comment49.params=
comment49.target=void\ useRifle()
comment49.text=\r\n\ Simulates\ the\ shooting\ range\ with\ a\ color\ rifle.\r\n
comment5.params=
comment5.target=void\ setRandomColorForKahla()
comment50.params=
comment50.target=void\ useGrounder()
comment51.params=x\ y\ stage\ dmg
comment51.target=void\ paintField(int,\ int,\ Stage,\ int)
comment52.params=amount
comment52.target=boolean\ checkInk(int)
comment52.text=\r\n\ Checks,\ if\ there\ is\ enough\ Ink\ to\ shoot.\r\n\ Input\:\ int\r\n\ Output\:\ boolean\r\n
comment53.params=amount
comment53.target=void\ useInk(int)
comment53.text=\r\n\ Decreases\ the\ Ink\ after\ a\ shot.\r\n\ Input\:\ int\r\n
comment54.params=
comment54.target=char\ getDirection()
comment54.text=\r\n\ Checks\ the\ direction\ the\ character\ faces.\r\n\ Output\:\ char\r\n
comment55.params=c
comment55.target=greenfoot.Color\ calculateComplementary(greenfoot.Color)
comment55.text=\r\n\ Calculates\ the\ complementary\ color\ to\ a\ given\ Color.\r\n\ Input\:\ Color\r\n\ Output\:\ Color\r\n
comment56.params=v1\ v2\ vh
comment56.target=double\ hue_to_rgb(double,\ double,\ double)
comment56.text=\r\n\ Transforms\ a\ Color\ from\ HUE\ to\ RGB.\r\n\ Input\:\ double,\ double,\ double\r\n\ Output\:\ double\r\n
comment57.params=
comment57.target=void\ dive()
comment57.text=\r\n\ Lets\ the\ character\ dive\ if\ standing\ on\ the\ same\ Color.\r\n
comment58.params=
comment58.target=void\ emerge()
comment58.text=\r\n\ Lets\ the\ character\ emerge\ out\ of\ diving.\r\n
comment59.params=
comment59.target=void\ fillUp()
comment59.text=\r\n\ Will\ increase\ the\ amount\ of\ ink\ by\ one.\r\n
comment6.params=
comment6.target=void\ setRandomColorForFarbi()
comment60.params=
comment60.target=boolean\ checkInkGround()
comment60.text=\r\n\ Checks\ the\ cell,\ the\ character\ currently\ is\ standing\ on,\ for\ the\ color.\r\n\ Output\:\ boolean\r\n
comment61.params=
comment61.target=boolean\ checkEnemyInkGround()
comment62.params=c1\ c2
comment62.target=boolean\ compareColor(greenfoot.Color,\ greenfoot.Color)
comment63.params=
comment63.target=boolean\ checkInkFront()
comment63.text=\r\n\ Checks\ the\ following\ cell\ and\ returns\ true,\ when\ that\ cell\ is\ in\ the\ same\ color\ of\ the\ character.\r\n\ Output\:\ boolean\r\n
comment64.params=
comment64.target=boolean\ checkInkBack()
comment64.text=\r\n\ Checks\ the\ cell\ behind\ the\ character\ and\ returns\ true,\ when\ that\ cell\ is\ in\ the\ same\ color\ of\ the\ character.\r\n\ Output\:\ boolean\r\n
comment65.params=
comment65.target=boolean\ checkInkSidewaysLeft()
comment66.params=
comment66.target=boolean\ checkInkSidewaysRight()
comment67.params=s
comment67.target=void\ control(java.lang.String)
comment67.text=\r\n\ Defines\ the\ control\ scheme\ of\ the\ character\r\n\ Input\:\ String\r\n
comment68.params=
comment68.target=void\ refillInk()
comment68.text=\r\n\ Refill\ the\ Ink,\ if\ in\ diving\ mode.\r\n
comment69.params=
comment69.target=void\ groundDamage()
comment7.params=
comment7.target=void\ cheatUnlimitedAmmo()
comment70.params=
comment70.target=boolean\ isTarget()
comment71.params=
comment71.target=boolean\ isCheckpoint()
comment72.params=
comment72.target=boolean\ isItem()
comment73.params=
comment73.target=boolean\ isOutline()
comment74.params=
comment74.target=Sphere\ getSphere()
comment75.params=
comment75.target=Platform\ getPlatform()
comment76.params=x\ y\ dmg
comment76.target=void\ checkAndHit(int,\ int,\ int)
comment77.params=
comment77.target=int\ getPlatformValue()
comment78.params=
comment78.target=void\ rememberValue()
comment79.params=
comment79.target=boolean\ isValue()
comment8.params=
comment8.target=boolean\ canMoveForward()
comment80.params=
comment80.target=boolean\ isValueSmaller()
comment81.params=
comment81.target=boolean\ isValueBigger()
comment82.params=
comment82.target=void\ setOutlineAsOnlyGoal()
comment83.params=
comment83.target=boolean\ hasWallInFront()
comment84.params=
comment84.target=boolean\ hasColorInFront()
comment85.params=
comment85.target=boolean\ hasSphereInFront()
comment86.params=
comment86.target=boolean\ hasPlatformInFront()
comment87.params=
comment87.target=boolean\ isUnderWall()
comment88.params=p\ dmg
comment88.target=void\ hitEnemy(Player,\ int)
comment89.params=dmg
comment89.target=void\ getDamaged(int)
comment9.params=
comment9.target=void\ waitForNextOrder()
comment90.params=
comment90.target=void\ dissolve()
comment91.params=
comment91.target=void\ respawn()
comment92.params=
comment92.target=void\ checkCheckpoint()
comment93.params=t
comment93.target=void\ hitTarget(Target)
comment94.params=o
comment94.target=void\ fillOutline(Outline)
comment95.params=
comment95.target=boolean\ checkItem()
comment96.params=
comment96.target=void\ take()
comment97.params=
comment97.target=void\ pickUp()
comment98.params=
comment98.target=void\ putDown()
comment99.params=
comment99.target=int\ getValue()
numComments=151
